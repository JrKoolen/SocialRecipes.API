name: CI/CD 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test Locally
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build API Image
      run: |
        docker build -t myapp/api:test -f api/Dockerfile .

    - name: Build Frontend Image
      run: |
        docker build -t myapp/frontend:test -f frontend/Dockerfile .

    - name: Create Docker Network
      run: docker network create test-network

    - name: Start Database Service
      run: |
        docker run -d --name db --network test-network -e POSTGRES_PASSWORD=password postgres:latest

    - name: Start API Service
      run: |
        docker run -d --name api --network test-network -e DATABASE_URL=postgres://user:password@db:5432/dbname myapp/api:test

    - name: Start Frontend Service
      run: |
        docker run -d --name frontend --network test-network -p 3000:80 myapp/frontend:test

    - name: Run Tests
      run: |
        docker run --rm --network test-network myapp/api:test npm run test

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results.xml

  deploy:
    name: Deploy Locally
    runs-on: ubuntu-latest
    needs: build-and-test

    if: success()

    steps:
    - name: Tag Production Images
      run: |
        docker tag myapp/api:test myapp/api:prod
        docker tag myapp/frontend:test myapp/frontend:prod

    - name: Notify Deployment Success
      run: echo "Local production images have been tagged successfully!"
